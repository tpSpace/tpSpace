name: "Update Weather Data"

on:
  schedule:
    # Run every hour at minute 0
    - cron: "0 * * * *"
  workflow_dispatch: # Allow manual trigger

jobs:
  update-weather:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update weather data
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          CITY: ${{ vars.WEATHER_CITY || 'Ho Chi Minh City' }}
        run: |
          # Get weather data using curl
          if [ -n "$WEATHER_API_KEY" ]; then
            echo "🌤️ Fetching real weather data..."
            WEATHER_JSON=$(curl -s "https://api.openweathermap.org/data/2.5/weather?q=$CITY&appid=$WEATHER_API_KEY&units=metric")
            
            if echo "$WEATHER_JSON" | grep -q '"name"'; then
              CITY_NAME=$(echo "$WEATHER_JSON" | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
              COUNTRY=$(echo "$WEATHER_JSON" | grep -o '"country":"[^"]*"' | cut -d'"' -f4)
              TEMP=$(echo "$WEATHER_JSON" | grep -o '"temp":[^,]*' | cut -d':' -f2 | cut -d'.' -f1)
              DESCRIPTION=$(echo "$WEATHER_JSON" | grep -o '"description":"[^"]*"' | cut -d'"' -f4)
              HUMIDITY=$(echo "$WEATHER_JSON" | grep -o '"humidity":[^,]*' | cut -d':' -f2)
              WIND_SPEED=$(echo "$WEATHER_JSON" | grep -o '"speed":[^,]*' | cut -d':' -f2)
              
              # Capitalize first letter of description
              DESCRIPTION=$(echo "$DESCRIPTION" | sed 's/./\U&/')
            else
              echo "❌ API call failed, using mock data"
              CITY_NAME="$CITY"
              COUNTRY="VN"
              TEMP=$((RANDOM % 15 + 25))
              DESCRIPTIONS=("Sunny" "Cloudy" "Rainy" "Partly cloudy")
              DESCRIPTION=${DESCRIPTIONS[$((RANDOM % 4))]}
              HUMIDITY=$((RANDOM % 30 + 60))
              WIND_SPEED=$((RANDOM % 10 + 5))
            fi
          else
            echo "⚠️ No API key found, using mock data"
            CITY_NAME="$CITY"
            COUNTRY="VN"
            TEMP=$((RANDOM % 15 + 25))
            DESCRIPTIONS=("Sunny" "Cloudy" "Rainy" "Partly cloudy")
            DESCRIPTION=${DESCRIPTIONS[$((RANDOM % 4))]}
            HUMIDITY=$((RANDOM % 30 + 60))
            WIND_SPEED=$((RANDOM % 10 + 5))
          fi

          # Get current timestamp
          TIMESTAMP=$(date -u '+%m/%d/%Y, %I:%M:%S %p UTC')

          # Create weather table content
          cat > weather_table.tmp << EOF
          <!-- WEATHER:START -->
          ## 🌤️ Current Weather in $CITY_NAME, $COUNTRY

          | 🕐 Time | 🌡️ Temperature | 🌤️ Condition | 💧 Humidity | 💨 Wind Speed | 🗓️ Last Updated |
          |---------|---------------|--------------|-------------|--------------|-----------------|
          | Now | ${TEMP}°C | $DESCRIPTION | ${HUMIDITY}% | ${WIND_SPEED} m/s | $TIMESTAMP |

          ---
          <!-- WEATHER:END -->
          EOF

          # Update README.md
          if grep -q "<!-- WEATHER:START -->" README.md; then
            # Replace existing weather section
            sed -i '/<!-- WEATHER:START -->/,/<!-- WEATHER:END -->/d' README.md
            sed -i '/### Hi there 👋/r weather_table.tmp' README.md
          else
            # Add weather section after the introduction
            sed -i '/### Hi there 👋/r weather_table.tmp' README.md
          fi

          # Clean up temporary file
          rm -f weather_table.tmp

          echo "✅ Weather updated: ${TEMP}°C, $DESCRIPTION in $CITY_NAME"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Weather Bot"
          git add README.md

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🌤️ Update weather data - $(date '+%Y-%m-%d %H:%M UTC')"
            git push origin ${{ github.ref_name }}
          fi

      - name: Create weather summary
        run: |
          echo "## Weather Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          if grep -q "<!-- WEATHER:START -->" README.md; then
            CITY_FROM_README=$(grep -A 5 "<!-- WEATHER:START -->" README.md | grep "Current Weather" | sed 's/.*Weather in \([^,]*\).*/\1/')
            TEMP_FROM_README=$(grep -A 8 "<!-- WEATHER:START -->" README.md | grep "| Now |" | awk -F'|' '{print $3}' | xargs)
            CONDITION_FROM_README=$(grep -A 8 "<!-- WEATHER:START -->" README.md | grep "| Now |" | awk -F'|' '{print $4}' | xargs)
            echo "- **City**: $CITY_FROM_README" >> $GITHUB_STEP_SUMMARY
            echo "- **Temperature**: $TEMP_FROM_README" >> $GITHUB_STEP_SUMMARY
            echo "- **Condition**: $CONDITION_FROM_README" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Status**: ✅ Weather data updated successfully" >> $GITHUB_STEP_SUMMARY
